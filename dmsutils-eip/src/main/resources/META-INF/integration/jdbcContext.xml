<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:jdbc="http://www.springframework.org/schema/integration/jdbc"

       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-4.0.xsd
       http://www.springframework.org/schema/integration/jdbc http://www.springframework.org/schema/integration/jdbc/spring-integration-jdbc-4.0.xsd">

    <int:poller id="jdbcPollerSync" fixed-rate="5000"/>
    <int:poller id="jdbcPollerAsync" fixed-rate="5000"/>

    <int:channel id="syncRequestBatchChannel"/>
    <int:channel id="asyncRequestBatchChannel"/>

    <int:channel id="syncRequestBatchSplitterChannel"/>
    <int:channel id="asyncRequestBatchSplitterChannel"/>

    <int:channel id="syncSingleRequestProcessChannel">
        <int:dispatcher task-executor="syncSingleRequestProcessExecutor"/>
    </int:channel>
    <int:channel id="asyncSingleRequestProcessChannel">
        <int:dispatcher task-executor="asyncSingleRequestProcessExecutor"/>
    </int:channel>

    <bean id="syncSingleRequestProcessExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="10"/>
        <property name="queueCapacity" value="100"/>
    </bean>

    <bean id="asyncSingleRequestProcessExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="1"/>
        <property name="queueCapacity" value="100"/>
    </bean>

    <int:channel id="syncResponseChannel"/>
    <int:channel id="asyncResponseChannel"/>

    <bean class="integration.config.ContextPlaceHolderConfigurer">
        <property name="location" value="classpath:/config/is-db.properties"></property>
    </bean>

    <jdbc:inbound-channel-adapter id="inboundAdapterSync"
                                  query="select * from ${syncRequestQueueTable} where MSG_DESTINATION='${syncMsgDestination}' and (MSG_STATUS='INITIAL' or (MSG_STATUS='ERROR' and MSG_PROCESS_STEP != 100))"
                                  update="update ${syncRequestQueueTable} set MSG_STATUS='PROCESSING' and MSG_PROCESS_STEP=MSG_PROCESS_STEP + 1"
                                  data-source="syncRequestDataSource"
                                  channel="syncRequestBatchChannel">
        <int:poller ref="jdbcPollerSync"/>
    </jdbc:inbound-channel-adapter>

    <!--update="update ${syncRequestQueueTable} set MSG_STATUS='PROCESSING' and MSG_PROCESS_STEP=MSG_PROCESS_STEP + 1"-->
    <!--"and (MSG_STATUS='INITIAL' or (MSG_STATUS='ERROR' and MSG_PROCESS_STEP <= 100))"-->

    <jdbc:inbound-channel-adapter id="inboundAdapterAsync"
                                  query="select * from ${asyncRequestQueueTable} where MSG_DESTINATION='${asyncMsgDestination}' and (MSG_STATUS='INITIAL' or (MSG_STATUS='ERROR' and MSG_PROCESS_STEP != 100))"
                                  update="update ${asyncRequestQueueTable} set MSG_STATUS='PROCESSING' and MSG_PROCESS_STEP=MSG_PROCESS_STEP + 1"
                                  data-source="asyncRequestDataSource"
                                  channel="asyncRequestBatchChannel">
        <int:poller ref="jdbcPollerAsync"/>
    </jdbc:inbound-channel-adapter>

    <int:service-activator input-channel="syncRequestBatchChannel" output-channel="syncRequestBatchSplitterChannel"
                           ref="jdbcService" method="processRequestBatch"/>

    <int:service-activator input-channel="asyncRequestBatchChannel" output-channel="asyncRequestBatchSplitterChannel"
                           ref="jdbcService" method="processRequestBatch"/>

    <int:splitter ref="syncRequestBatchSplitterProcessor" input-channel="syncRequestBatchSplitterChannel" output-channel="syncSingleRequestProcessChannel"/>
    <int:splitter ref="asyncRequestBatchSplitterProcessor" input-channel="asyncRequestBatchSplitterChannel" output-channel="asyncSingleRequestProcessChannel"/>

    <bean id="syncRequestBatchSplitterProcessor" class="integration.service.JdbcMessageListSplitter"/>
    <bean id="asyncRequestBatchSplitterProcessor" class="integration.service.JdbcMessageListSplitter"/>

    <int:service-activator ref="jdbcService" method="singleRequestProcess"
                           input-channel="syncSingleRequestProcessChannel" output-channel="syncResponseChannel"/>

    <int:service-activator ref="jdbcService" method="singleRequestProcess"
                           input-channel="asyncSingleRequestProcessChannel" output-channel="asyncResponseChannel"/>

    <jdbc:outbound-channel-adapter id="outboundAdapterSync" data-source="syncResponseDataSource" channel="syncResponseChannel"
                                   query="insert into ${syncResponseQueueTable}(MSG_ID,MSG_CORRELATION_ID,MSG_DESTINATION,MSG_REPLY_TO,MSG_EXPIRATION,MSG_PRIORITY,MSG_CONTENT,PRC_STATUS,PRC_ID) values
                                                                             (:msg_id,:msg_correlation_id,:msg_destination,:msg_reply_to,:msg_expiration,:msg_priority,:msg_content,:prc_status,:prc_id)"
                                   sql-parameter-source-factory="spelSource"/>

    <jdbc:outbound-channel-adapter id="outboundAdapterAsync" data-source="asyncResponseDataSource" channel="asyncResponseChannel"
                                   query="insert into ${asyncResponseQueueTable}(MSG_ID,MSG_CORRELATION_ID,MSG_DESTINATION,MSG_REPLY_TO,MSG_EXPIRATION,MSG_PRIORITY,MSG_CONTENT,PRC_STATUS,PRC_ID) values
                                                                             (:msg_id,:msg_correlation_id,:msg_destination,:msg_reply_to,:msg_expiration,:msg_priority,:msg_content,:prc_status,:prc_id)"
                                   sql-parameter-source-factory="spelSource"/>

    <bean id="spelSource" class="org.springframework.integration.jdbc.ExpressionEvaluatingSqlParameterSourceFactory">
        <property name="parameterExpressions">
            <map>
                <entry key="msg_id"               value="123"/>
                <entry key="msg_correlation_id"   value="123"/>
                <entry key="msg_destination"      value="123"/>
                <entry key="msg_reply_to"         value="123"/>
                <entry key="msg_expiration"       value="123"/>
                <entry key="msg_priority"         value="4"/>
                <entry key="msg_content"          value="123"/>
                <entry key="prc_status"           value="123"/>
                <entry key="prc_id"               value="123"/>
            </map>
        </property>
    </bean>

</beans>
