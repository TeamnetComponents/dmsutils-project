#class named used for the service implementation
#service.class=ro.croco.integration.dms.toolkit.StoreServiceImpl_Jms
#service.name=jms-fo
instance.name=jms-fo
instance.class=ro.croco.integration.dms.toolkit.StoreServiceImpl_Jms
instance.cache=true

#service implementation specific parameters
#Queue connection properties
java.naming.factory.initial=com.ibm.websphere.naming.WsnInitialContextFactory
java.naming.provider.url=corbaloc:iiop:WPSFO:2810
java.naming.security.principal=
java.naming.security.credentials=

jms.queue.connection.factory=jms/CrocoFOQueueCF2
jms.queue.producer=jms/CrocoFOQueue2

#SYNCHRONOUS QUEUE SETTINGS
jms.synchronous.queue.producer=jms/CrocoFOQueue2
jms.synchronous.queue.producer.timeout=300
#delivery mode NON_PERSISTENT = 1, PERSISTENT=2
jms.synchronous.queue.producer.deliveryMode=1
jms.synchronous.queue.producer.priority=5
jms.synchronous.queue.producer.timeToLive=600000

#jms.synchronous.queue.consumer=jms/CrocoQueueReturn
jms.synchronous.queue.consumer=
jms.synchronous.queue.consumer.timeout=50000

jms.synchronous.session.acknoledge=1

#synchonous connection pool properties
jms.synchronous.connection.pool.maxActive=100
jms.synchronous.connection.pool.whenExhaustedAction=1
jms.synchronous.connection.pool.maxWait=-1
jms.synchronous.connection.pool.minIdle=5
jms.synchronous.connection.pool.maxIdle=10
jms.synchronous.connection.pool.maxTotal=100
jms.synchronous.connection.pool.testOnBorrow=false
jms.synchronous.connection.pool.testOnReturn=false
jms.synchronous.connection.pool.timeBetweenEvictionRunsMillis=1000
jms.synchronous.connection.pool.numTestsPerEvictionRun=3
jms.synchronous.connection.pool.minEvictableIdleTimeMillis=60000
jms.synchronous.connection.pool.testWhileIdle=false

#ASYNCHRONOUS QUEUE SETTINGS
jms.asynchronous.queue.producer=jms/CrocoFOQueue2
jms.asynchronous.queue.producer.timeout=300
#delivery mode NON_PERSISTENT = 1, PERSISTENT=2
jms.asynchronous.queue.producer.deliveryMode=1
jms.asynchronous.queue.producer.priority=4
jms.asynchronous.queue.producer.timeToLive=600000

#jms.asynchronous.queue.consumer=jms/CrocoQueueReturn
#jms.asynchronous.queue.consumer=jms/CrocoQueueReturnAsynchronous
jms.asynchronous.queue.consumer=jms/CrocoFOQueueResponse2
jms.asynchronous.queue.consumer.timeout=50000

jms.asynchronous.session.acknoledge=1

#asynchronous connection pool properties
jms.asynchronous.connection.pool.maxActive=100
jms.asynchronous.connection.pool.whenExhaustedAction=1
jms.asynchronous.connection.pool.maxWait=-1
jms.asynchronous.connection.pool.minIdle=5
jms.asynchronous.connection.pool.maxIdle=10
jms.asynchronous.connection.pool.maxTotal=100
jms.asynchronous.connection.pool.testOnBorrow=false
jms.asynchronous.connection.pool.testOnReturn=false
jms.asynchronous.connection.pool.timeBetweenEvictionRunsMillis=1000
jms.asynchronous.connection.pool.numTestsPerEvictionRun=3
jms.asynchronous.connection.pool.minEvictableIdleTimeMillis=60000
jms.asynchronous.connection.pool.testWhileIdle=false

#alternate repository
alternate.service.properties=jcr
alternate.service.location.upload=/temporary/upload
alternate.service.location.download=/temporary/download

store.service.path.temp.upload=/temporary/upload/${yyyy}${MM}${dd}/${HH}-${mm}-${ss}
store.service.path.temp.download=/temporary/download/${yyyy}${MM}${dd}/${HH}-${mm}-${ss}
store.service.path.temp.recycle=/temporary/delete/${yyyy}${MM}${dd}/${HH}-${mm}-${ss}